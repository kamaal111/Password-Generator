name: CI
on:
  push:
    branches:
      - develop
      - "release/**"
      - "feature/**"
jobs:
  quality:
    name: Quality
    timeout-minutes: 15
    runs-on: macos-latest
    steps:
      - name: Git - Checkout
        uses: actions/checkout@v2

      - name: Swift lint
        run: |
          python3 Scripts/swiftlint_checker/main.py

  test:
    name: Test
    timeout-minutes: 15
    runs-on: macos-latest
    needs: [quality]
    steps:
      - name: Git - Checkout
        uses: actions/checkout@v2

      - name: Setup - Xcode
        run: |
          sh Scripts/set_up_xcode_version.sh

      - name: Setup - Ruby and bundler dependencies
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6
          bundler-cache: true

      - name: Test
        run: |
          make run_tests

  appStoreContent:
    name: App Store content
    runs-on: macos-latest
    needs: [test]
    if: contains(github.ref, 'refs/heads/release/') && false
    steps:
      - name: Git - Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}
          submodules: recursive

      - name: Setup - Xcode
        run: |
          sh Scripts/set_up_xcode_version.sh

      - name: Setup - Ruby and bundler dependencies
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6
          bundler-cache: true

      - name: Generate sensitive content
        env:
          EMAIL_ADDRESS: ${{ secrets.APP_STORE_CONNECT_USERNAME }}
          PHONE_NUMBER: ${{ secrets.PHONE_NUMBER }}
        run: |
          go run Scripts/generate-sensetive-content/*.go

      - name: Take snapshots
        run: |
          make generate_snapshots

      - name: Upload app store connect content
        env:
          FASTLANE_ENABLE_BETA_DELIVER_SYNC_SCREENSHOTS: true
          FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: ${{ secrets.APP_STORE_CONNECT_PASSWORD }}

        run: |
          make upload_metadata_to_store

  deployIOS:
    name: deploy iOS
    timeout-minutes: 15
    runs-on: macos-latest
    needs: [test]
    env:
      PRODUCT_NAME: Passlify
      INITIAL_BUILD_NUMBER: 7
    if: contains(github.ref, 'refs/heads/release/') || github.ref == 'refs/heads/develop'
    steps:
      - name: Git - Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}
          submodules: recursive

      - name: Import signing certificate
        timeout-minutes: 1
        env:
          SIGNING_CERTIFICATE_P12_DATA: ${{ secrets.SIGNING_CERTIFICATE_P12_DATA }}
          SIGNING_CERTIFICATE_PASSWORD: ${{ secrets.SIGNING_CERTIFICATE_PASSWORD }}
          KEYCHAIN_PASSPHRASE: ${{ secrets.KEYCHAIN_PASSPHRASE }}
        run: |
          bash Scripts/import_signing_certificate_ios.bash

      - name: Import provisioning profile
        env:
          PROVISIONING_PROFILE_DATA: ${{ secrets.PROVISIONING_PROFILE_DATA }}
        run: |
          set -euo pipefail

          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          echo "$PROVISIONING_PROFILE_DATA" | base64 --decode > ~/Library/MobileDevice/Provisioning\ Profiles/profile.mobileprovision

      - name: Setup - Xcode
        run: |
          sh Scripts/set_up_xcode_version.sh

      - name: Bump build number
        env:
          INFO_PLIST_PATH: Targets/iOS/Info.plist
        run: |
          let build_number=${{ github.run_number }}
          let build_number=$build_number+$INITIAL_BUILD_NUMBER

          ./Scripts/version-bumper/bin/version-bumper -b "$build_number" -i "$INFO_PLIST_PATH"

      - name: Setup - Ruby and bundler dependencies
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6
          bundler-cache: true

      - name: Build app
        run: |
          make build_ios

      - name: Upload app to App Store Connect
        env:
          APP_STORE_CONNECT_USERNAME: ${{ secrets.APP_STORE_CONNECT_USERNAME }}
          APP_STORE_CONNECT_PASSWORD: ${{ secrets.APP_STORE_CONNECT_PASSWORD }}
        run: |
          xcrun altool --upload-app -t ios -f "$PRODUCT_NAME".ipa -u "$APP_STORE_CONNECT_USERNAME" -p "$APP_STORE_CONNECT_PASSWORD"
